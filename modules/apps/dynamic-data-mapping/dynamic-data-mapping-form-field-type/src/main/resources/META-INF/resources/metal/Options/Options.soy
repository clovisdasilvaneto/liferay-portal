{namespace Options}

{template .render}
	{@param? _handleDeleteOption: any}
	{@param? _handleTextChanged: any}
	{@param? readOnly: bool}
	{@param? tip: string}
	{@param? items: list<[
		disabled: bool,
		label: string,
		name: string,
		value: string
	]>}
	{@param? id: string}
	{@param? label: string}
	{@param? repeatable: bool}
	{@param? required: bool}
	{@param? showLabel: bool}
	{@param? spritemap: string}
	{@param? placeholder: string}

	{call FieldBase.render}
		{param contentRenderer kind="html"}
			{if $items}
				<div class="field-options">
					{for $option in $items}
						<div class="ddm-options-target"></div>

						{let $fieldConfig kind="html"}
							<div class="ddm-field-options" data-index={index($option)}>
								<svg
									aria-hidden="true"
									class="lexicon-icon ddm-options-drag lexicon-icon-drag"
								>
									<use xlink:href="{$spritemap}#drag" />
								</svg>

								{call Text.render}
									{param events: [
										'fieldEdited': $_handleTextChanged
									] /}
									{param readOnly: $readOnly ? $readOnly : $option.disabled /}
									{param name: $option.name /}
									{param ref: 'text'+index($option) /}
									{param showLabel: false /}
									{param spritemap: $spritemap /}
									{param value: $option.label and $option.value ? $option.label : $placeholder /}
									{param required: $required /}
								{/call}

								{if not isLast($option)}
									<button class="close close-modal" data-onclick={$_handleDeleteOption} type="button">
										<svg
										aria-hidden="true"
										class="lexicon-icon lexicon-icon-times"
									>
										<use xlink:href="{$spritemap}#times" />
										</svg>
									</button>
								{/if}
							</div>
						{/let}

						{$fieldConfig}
					{/for}
				</div>
			{/if}
		{/param}

		{param tip: $tip /}
		{param id: $id /}
		{param label: $label /}
		{param repeatable: $repeatable /}
		{param showLabel: $showLabel /}
		{param spritemap: $spritemap /}
	{/call}
{/template}