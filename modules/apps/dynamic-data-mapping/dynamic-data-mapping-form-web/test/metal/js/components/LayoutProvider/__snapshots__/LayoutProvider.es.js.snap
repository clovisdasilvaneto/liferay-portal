// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LayoutProvider Field events activePageUpdated should listen the activePageUpdated event and change the state of the active page for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldBlurred should listen the fieldBlurred event and change the state of the focusedField to the data receive 1`] = `Object {}`;

exports[`LayoutProvider Field events fieldDeleted should listen the fieldDeleted event and delete the field in the column to the pages 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldDuplicated should listen the duplicate field event and add this field in the pages 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "fieldName": "name0000",
                "label": "Radio",
                "name": "name0000",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "fieldName": "name0010",
                "label": "copy-of-x",
                "name": "name0010",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 12,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "fieldName": "name0020",
                "label": "Text",
                "name": "name0020",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "fieldName": "name0120",
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "name": "name0120",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "fieldName": "name0030",
                "label": "Second row",
                "name": "name0030",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldEdited should listen the fieldEdited event and change the state of the focusedField and pages for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "columnIndex": 0,
                "label": "Radio",
                "pageIndex": 0,
                "rowIndex": 0,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "columnIndex": 0,
                "label": "Text",
                "pageIndex": 0,
                "required": true,
                "rowIndex": 0,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "columnIndex": 0,
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "pageIndex": 0,
                "required": true,
                "rowIndex": 0,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "columnIndex": 0,
                "label": "Second row",
                "pageIndex": 0,
                "required": true,
                "rowIndex": 0,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldMoved should listen to the fieldMoved event and move the field to the column in pages 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 12,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldMoved should listen to the fieldMoved event and move the field to the row in pages 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldMoved should listen to the pagesUpdated event 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldMoved should move the field to the column in pages and remove the row if there are no fields 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events fieldMoved should move the field to the row in pages and remove the row if there are no fields 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events focusedFieldUpdated should listen the focusedFieldUpdated event and change the state of the focusedField and pages for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "columnIndex": 0,
                "pageIndex": 0,
                "rowIndex": 0,
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events pageAdded should listen the pageAdded event and change the state of pages for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
  Object {
    "description": "",
    "enabled": true,
    "localizedDescription": Object {
      "en_US": "",
    },
    "localizedTitle": Object {
      "en_US": "",
    },
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [],
            "size": 12,
          },
        ],
      },
    ],
    "showRequiredFieldsWarning": true,
    "title": "",
  },
]
`;

exports[`LayoutProvider Field events pageDeleted should listen the pageDeleted event and change the state of pages for the data wich was received 1`] = `Array []`;

exports[`LayoutProvider Field events pageReset should listen the pageReset event and change the state of pages for the data wich was received 1`] = `
Array [
  Object {
    "description": "",
    "enabled": true,
    "localizedDescription": Object {
      "en_US": "",
    },
    "localizedTitle": Object {
      "en_US": "",
    },
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [],
            "size": 12,
          },
        ],
      },
    ],
    "showRequiredFieldsWarning": true,
    "title": "",
  },
]
`;

exports[`LayoutProvider Field events paginationModeUpdated should listen the paginationModeUpdated event and change the state of pagination mode for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events paginationModeUpdated should listen the paginationModeUpdated event and change the state of pagination mode from pagination to wizard 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;

exports[`LayoutProvider Field events successPageChanged should listen the successPageChanged event and change the state of success page for the data wich was received 1`] = `
Array [
  Object {
    "rows": Array [
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Radio",
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "radio",
              },
            ],
            "size": 3,
          },
          Object {
            "fields": Array [],
            "size": 9,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Text",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 4,
          },
          Object {
            "fields": Array [
              Object {
                "items": Array [
                  Object {
                    "name": "Foo",
                  },
                  Object {
                    "name": "Bar",
                  },
                ],
                "label": "Select",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "select",
              },
            ],
            "size": 6,
          },
          Object {
            "fields": Array [],
            "size": 2,
          },
        ],
      },
      Object {
        "columns": Array [
          Object {
            "fields": Array [
              Object {
                "label": "Second row",
                "required": true,
                "settingsContext": Object {
                  "pages": Array [],
                },
                "type": "text",
              },
            ],
            "size": 12,
          },
        ],
      },
    ],
    "title": "Untitled name",
  },
]
`;
