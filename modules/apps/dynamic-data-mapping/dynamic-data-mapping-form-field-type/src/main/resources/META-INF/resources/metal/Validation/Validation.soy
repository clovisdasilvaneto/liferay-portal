{namespace Validation}

{template .render}
	{@param name: string}
	{@param? id: string}
	{@param? spritemap: string}
	{@param? dataType: string}
	{@param? enableValidation: bool}
	{@param? errorMessage: string}
	{@param? label: string}
	{@param? parameterMessage: string}
	{@param? strings: [chooseAnOption: string, email: string, errorMessage: string, ifInput: string, showErrorMessage: string, theValue: string, url: string, validationMessage: string]}
	{@param? _handleEnableValidationEdited: any}
	{@param? _handleValidationValueEdited: any}
	{@param? _handleParameterMessageEdited: any}
	{@param? _handleErrorMessageEdited: any}
	{@param? selectedValidation: [parameterMessage: string, value: string]}
	{@param? validations: list<[
		checked: bool,
		disabled: bool,
		id: string,
		inline: bool,
		label: string,
		name: string,
		showLabel: bool,
		value: string
	]>}

	{call .content}
		{param _handleEnableValidationEdited: $_handleEnableValidationEdited /}
		{param _handleErrorMessageEdited: $_handleErrorMessageEdited /}
		{param _handleParameterMessageEdited: $_handleParameterMessageEdited /}
		{param dataType: $dataType /}
		{param enableValidation: $enableValidation /}
		{param errorMessage: $errorMessage /}
		{param _handleValidationValueEdited: $_handleValidationValueEdited /}
		{param id: $id /}
		{param label: $label /}
		{param name: $name /}
		{param parameterMessage: $parameterMessage /}
		{param selectedValidation: $selectedValidation /}
		{param spritemap: $spritemap /}
		{param strings: $strings /}
		{param validations: $validations /}
	{/call}

{/template}

{template .content}
	{@param name: string}
	{@param? _handleEnableValidationEdited: any}
	{@param? _handleErrorMessageEdited: any}
	{@param? _handleParameterMessageEdited: any}
	{@param? _handleValidationValueEdited: any}
	{@param? dataType: string}
	{@param? enableValidation: bool}
	{@param? errorMessage: string}
	{@param? label: string}
	{@param? parameterMessage: string}
	{@param? selectedValidation: [parameterMessage: string, value: string]}
	{@param? spritemap: string}
	{@param? strings: [chooseAnOption: string, email: string, errorMessage: string, ifInput: string, showErrorMessage: string, theValue: string, url: string, validationMessage: string]}
	{@param? validations: list<[
		checked: bool,
		disabled: bool,
		id: string,
		inline: bool,
		label: string,
		name: string,
		showLabel: bool,
		value: string
	]>}

	<div class="form-group lfr-ddm-form-field-validation">
		{call Checkbox.render}
			{param events: [
				'fieldEdited': $_handleEnableValidationEdited
			] /}
			{param label: $label /}
			{param ref: 'enableValidation' /}
			{param value: $enableValidation /}
			{param showAsSwitcher: true /}
			{param spritemap: $spritemap /}
		{/call}

		{call Select.render}
			{param disableEmptyOption: true /}
			{param events: [
				'fieldEdited': $_handleValidationValueEdited
			] /}
			{param label: $strings.ifInput /}
			{param options: $validations /}
			{param placeholder: $strings?.chooseAnOption /}
			{param ref: 'selectedValidation' /}
			{param spritemap: $spritemap /}
			{param strings: ['chooseAnOption': $strings?.chooseAnOption] /}
			{param value: $selectedValidation?.value /}
			{param visible: $enableValidation /}
		{/call}

		{if $selectedValidation?.parameterMessage and $dataType == 'string'}
			{call Text.render}
				{param dataType: $dataType /}
				{param events: [
					'fieldEdited': $_handleParameterMessageEdited
				] /}
				{param label: $strings?.theValue /}
				{param name: $name + '_parameterMessage' /}
				{param placeholder: $selectedValidation?.parameterMessage /}
				{param ref: 'parameterMessage' /}
				{param required: true /}
				{param spritemap: $spritemap /}
				{param value: $parameterMessage /}
				{param visible: $enableValidation /}
			{/call}
		{elseif $selectedValidation?.parameterMessage}
			{call Numeric.render}
				{param dataType: $dataType /}
				{param events: [
					'fieldEdited': $_handleParameterMessageEdited
				] /}
				{param label: $strings?.theValue /}
				{param name: $name + '_parameterMessage' /}
				{param placeholder: $selectedValidation?.parameterMessage /}
				{param ref: 'parameterMessage' /}
				{param required: true /}
				{param spritemap: $spritemap /}
				{param value: $parameterMessage /}
				{param visible: $enableValidation /}
			{/call}
		{/if}

		{call Text.render}
			{param events: [
				'fieldEdited': $_handleErrorMessageEdited
			] /}
			{param label: $strings?.showErrorMessage /}
			{param name: $name + '_errorMessage' /}
			{param placeholder: $strings?.showErrorMessage /}
			{param ref: 'errorMessage' /}
			{param required: true /}
			{param spritemap: $spritemap /}
			{param value: $errorMessage /}
			{param visible: $enableValidation /}
		{/call}
	</div>
{/template}